/* tslint:disable */
/* eslint-disable */
/**
 * Openfort API
 * Complete Openfort API references and guides can be found at: https://openfort.xyz/docs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: founders@openfort.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { Interaction } from './interaction';

/**
 * 
 * @export
 * @interface CreateTransactionIntentRequest
 */
export interface CreateTransactionIntentRequest {
    /**
     * The chain ID. Must be a [supported chain](/development/chains).
     * @type {number}
     * @memberof CreateTransactionIntentRequest
     */
    'chainId': number;
    /**
     * ID of the Player this TransactionIntent belongs to, if one exists (starts with `pla_`).  If you omit this parameter a new Player will be created.
     * @type {string}
     * @memberof CreateTransactionIntentRequest
     */
    'player'?: string;
    /**
     * ID of the Account this TransactionIntent is executed with, if one exists (starts with `acc_` or `dac_`).  When providing a Player and ChainID, you can omit this parameter.
     * @type {string}
     * @memberof CreateTransactionIntentRequest
     */
    'account'?: string;
    /**
     * ID of the Policy that defines the gas sponsorship strategy (starts with `pol_`). If no Policy is provided, the own Account native token funds will be used to pay for gas.
     * @type {string}
     * @memberof CreateTransactionIntentRequest
     */
    'policy'?: string;
    /**
     * Use this parameter to create a new Account for Player with the provided owner address.  If you omit this parameter and no Account exists for the Player, a custodial Account will be created.
     * @type {string}
     * @memberof CreateTransactionIntentRequest
     */
    'externalOwnerAddress'?: string;
    /**
     * Set to `true` to indicate that the transactionIntent request should be resolved as soon as possible, after the transactionIntent is created and simulated and before it arrives on chain.
     * @type {boolean}
     * @memberof CreateTransactionIntentRequest
     */
    'optimistic'?: boolean;
    /**
     * 
     * @type {Array<Interaction>}
     * @memberof CreateTransactionIntentRequest
     */
    'interactions': Array<Interaction>;
}


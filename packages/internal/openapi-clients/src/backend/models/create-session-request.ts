/* tslint:disable */
/* eslint-disable */
/**
 * Openfort API
 * Complete Openfort API references and guides can be found at: https://openfort.xyz/docs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: founders@openfort.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface CreateSessionRequest
 */
export interface CreateSessionRequest {
    /**
     * The address of the session key.
     * @type {string}
     * @memberof CreateSessionRequest
     */
    'address': string;
    /**
     * The chain ID. Must be a [supported chain](/development/chains).
     * @type {number}
     * @memberof CreateSessionRequest
     */
    'chainId': number;
    /**
     * If no account exists for a given player, create one with this address.
     * @type {string}
     * @memberof CreateSessionRequest
     */
    'externalOwnerAddress'?: string;
    /**
     * Maximum number of times the session key can be used.
     * @type {number}
     * @memberof CreateSessionRequest
     */
    'limit'?: number;
    /**
     * Set to `true` to indicate that the transactionIntent request should be resolved as soon as possible, after the transactionIntent is created and simulated and before it arrives on chain.
     * @type {boolean}
     * @memberof CreateSessionRequest
     */
    'optimistic'?: boolean;
    /**
     * ID of the Policy that defines the gas sponsorship strategy (starts with `pol_`). If no Policy is provided, the own Account native token funds will be used to pay for gas.
     * @type {string}
     * @memberof CreateSessionRequest
     */
    'policy'?: string;
    /**
     * The unix timestamp in seconds when the session key becomes valid.
     * @type {number}
     * @memberof CreateSessionRequest
     */
    'validAfter': number;
    /**
     * The unix timestamp in seconds when the session key expires.
     * @type {number}
     * @memberof CreateSessionRequest
     */
    'validUntil': number;
    /**
     * The list of whitelisted addresses (contracts the session key can interact with).
     * @type {Array<string>}
     * @memberof CreateSessionRequest
     */
    'whitelist'?: Array<string>;
    /**
     * The player ID (starts with pla_).
     * @type {string}
     * @memberof CreateSessionRequest
     */
    'player'?: string;
}

